@page "/ServiceView"
@page "/ServiceView/{CodeId}"
@using EmprendeUCR_WebApplication.Data.Services
@using EmprendeUCR_WebApplication.Data.Entities
@using EmprendeUCR_WebApplication.Data.Services.Categories
@using EmprendeUCR_WebApplication.Data.Services.Keyword
@using EmprendeUCR_WebApplication.Data.Entities.Keyword
@using System.IO
@using BlazorInputFile
@using Syncfusion.Blazor.TreeGrid;
@inject NavigationManager NavigationManager
@inject Product_ServiceService Product_ServiceService
@inject ServiceService ServiceService
@inject CategoryService CategoryService
@inject ProductService ProductService
@inject Service_PhotosService Service_PhotosService
@inject HasSuppliesService HasSuppliesService
@inject Has_StatusService Has_StatusService
@inject HasKeywordServiceService hasKeywordSer
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<body>

    <div class="">
        <!--Displays the header-->
        <section class=" w-100 gap-lg-2">

            <div class=" border-1 shadow  bg-silver w-90">
                <div class="form-group w-70">
                    <label for="Name" class="control-label m-lg-2">Nombre:</label>
                    <label for="Name" class="control-label">@_service.Service_Name</label>
                </div><br />
                <div class="form-group w-30">
                    <label for="Price" class="control-label m-lg-2">Categoria:</label>
                    <label for="Price" class="control-label ">@CategoryService.getCategory(_service.Category_ID).Title</label>
                </div>
                <div class="form-group w-70">
                    <label for="Service_Description" class="control-label m-lg-2">Descripción:</label>
                    <textarea readonly="readonly" rows="3" form="Service_Description" class="form-control m-lg-2">@_service.Service_Description</textarea>

                </div><br />
                <div class="form-group w-30">
                    <label for="Price" class="control-label m-lg-2">Precio por hora(CRC):</label>
                    <label for="Price" class="control-label ">@_service.Price_per_hour</label>
                </div>


            </div>

            <div class="border-1 shadow  bg-silver mt-3 w-90">
                <label for="Keyword" class="control-label m-lg-2">Palabras claves Asociadas:</label>
                <label for="Keyword" class="control-label ">
                    @foreach (string has in hasKeywordSer.GetKeywordsByService(ProductService.GetService(_service.Code_ID)))
                    {
        @has.ToString()}
                </label>
            </div>

            <div class=" border-1 shadow  bg-silver mt-3 w-90">
                <h2 class="bg-blue text-center">Estados asociados</h2>
                @foreach (var prodStatus in serviceStatuses.OrderBy(p => p.Order))
                {
    <span class="m-lg-2">
        @prodStatus.Name
        <br />
    </span>}
            </div>



            <div class=" border-1 shadow  bg-silver  mt-3 w-90">
                <h2 class="bg-blue text-center">Insumos</h2>
                @foreach (var category in supplyCategory)
                {

    <span class="m-lg-2">
        @category.Title
        <br />
    </span>}
            </div>

            <div>
                <div class="wrapper mt-3">
                    @foreach (var prodPhoto in photosDisplay)
                    {
        <div class="one">
            <label class="" for="addPhoto1">
                @if (prodPhoto != null)
                {
<img src="@Service_PhotosService.convertServiceImageDisplay(prodPhoto.Photos)" width="200" class=" img-card mt-2" />}
            </label>
        </div>}
                </div>
            </div>


            <div class="row  mt-3 ">
                <div class="col-md-4">
                    <div class="form-group">
                        <input type="button" class="btn btn-primary" @onclick="@back" value="Regresar" />
                        <input type="button" class="btn btn-primary" value="Editar" />
                        <input type="button" class="btn btn-primary" value="Eliminar" />

                    </div>
                </div>
            </div>

        </section>

    </div>
</body>

@functions { [Parameter]
    public string CodeId { get; set; } }

@code { Service _service = new Service();
    Service_Photos _servPhoto = new Service_Photos();
    IList<Service_Photos> photosDisplay;
    IList<HasSupplies> serviceSupplies;
    IList<Has_Status> serviceStatuses;
    IList<Category> supplyCategory = new List<Category>();

    public void c(string CodeId)
    {
        loadService(CodeId);
    }

    public void loadService(string CodeId)
    {
        _service = ServiceService.GetService(CodeId);
    }

    protected override async Task OnInitializedAsync()
    {
        loadService(CodeId);
        loadPhotos(int.Parse(CodeId));
        loadSupplies(int.Parse(CodeId));
        loadStatuses(int.Parse(CodeId));
    }

    public void loadPhotos(int CodeId)
    {
        photosDisplay = Service_PhotosService.loadPhotosByID(CodeId);
    }

    public void loadSupplies(int CodeId)
    {
        serviceSupplies = HasSuppliesService.loadSuppliesByID(CodeId);
        foreach (var supply in serviceSupplies)
        {
            var category = CategoryService.getCategory(supply.Supplie_ID);
            supplyCategory.Add(category);
        }
    }

    public void loadStatuses(int CodeId)
    {
        serviceStatuses = Has_StatusService.loadStatusesByID(CodeId);
        serviceStatuses.OrderBy(p => p.Order);
    }

    void back()
    {
        NavigationManager.NavigateTo("ListService");
    } }
