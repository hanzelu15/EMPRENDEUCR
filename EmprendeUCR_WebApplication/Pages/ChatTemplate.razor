@page "/chat"
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Lists
@using System.Collections.ObjectModel
@using EmprendeUCR_WebApplication.Data.Entities

<div id="container">
    <div id="sample">
        <SfListView ID="list"
                    DataSource="@DataSource"
                    ShowHeader="true"
                    Height="420px"
                    HeaderTitle="Chat">
            <ListViewFieldSettings TValue="ListDataModel" Id="Id" Text="Text"></ListViewFieldSettings>
            <ListViewTemplates TValue="ListDataModel">
                <Template>
                    @{
                        ListDataModel currentData = context as ListDataModel;

                        <div class="flex item__container">
                            <div class="flex flex__1 vertical__center flex__center @(currentData.Chat == "sender" ? "flex__order__2" : "")">
                                @if (currentData.Avatar != "")
                                {
                                    <span class="e-avatar e-avatar-circle">@currentData.Avatar</span>
                                }
                                else
                                {
                                    <span class="@currentData.Pic e-avatar e-avatar-circle"></span>
                                }
                            </div>
                            <div class="flex content__container flex__8 vertical padding @(currentData.Chat == "sender" ? "right__align" : "left__align")">
                                <div class="bold">@currentData.Name</div>
                                <div class="small__font">@currentData.MensajeChat</div>
                            </div>
                        </div>
                    }
                </Template>
            </ListViewTemplates>
        </SfListView>
        <div class="flex">
            <div class="flex__8 padding">
                <SfTextBox Placeholder="Type your message"@bind-Value="vacio" ValueChange="@OnInputSave" @onkeypress="@ValidateEnterKey"
                           ></SfTextBox>
            </div>
            <div class="flex__1">
                <button class="e-btn" @onclick="@OnSend" >Send</button>
            </div>
        </div>
    </div>
</div>

@code {
    SfListView<ListDataModel> list;
    string chatMessage = "";
    string vacio = "";
    SfTextBox SfTextBox;
    ObservableCollection<ListDataModel> DataSource = new ObservableCollection<ListDataModel>() {
        new ListDataModel {
            Name = "Jenifer",
            MensajeChat = "Hi",
            Id = "1",
            Avatar = "",
            Pic = "pic01",
            Chat = "sender"
        },
        new ListDataModel {
            Name = "Amenda",
            MensajeChat = "Hello",
            Id = "2",
            Avatar = "A",
            Pic = "",
            Chat = "receiver"
        },
        new ListDataModel {
            Name = "Jenifer",
            MensajeChat = "What Knid of application going to launch",
            Id = "4",
            Avatar = "",
            Pic = "pic02",
            Chat = "sender"
        },
        new ListDataModel {
            Name = "Amenda ",
            MensajeChat = "A knid of Emergency broadcast App",
            Id = "5",
            Avatar = "A",
            Pic = "",
            Chat = "receiver"
        },
        new ListDataModel {
            Name = "Jacob",
            MensajeChat = "Can you please elaborate",
            Id = "6",
            Avatar = "",
            Pic = "pic04",
            Chat = "receiver"
        },
    };

    void OnInputSave(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        chatMessage = args.Value.ToString();
    }

    void ValidateEnterKey(KeyboardEventArgs args)
    {
        vacio = "";
        Console.WriteLine(chatMessage);
        if (args.Key == "Enter")
        {
            OnSend();
            chatMessage = "";
        }
    }

    void OnSend()
    {
        if (chatMessage != "")
        {
            DataSource.Add(new ListDataModel
            {
                Name = "Amenda",
                MensajeChat = chatMessage,
                Id = new Random().Next(300, 900).ToString(),
                Avatar = "A",
                Pic = "",
                Chat = "receiver"
            });
        }

        chatMessage = "";
        vacio = "";
    }

    public class ListDataModel
    {
        public string Id
        {
            get;
            set;
        }
        public string Chat
        {
            get;
            set;
        }
        public string Pic
        {
            get;
            set;
        }
        public string Avatar
        {
            get;
            set;
        }
        public string Name
        {
            get;
            set;
        }
        public string MensajeChat
        {
            get;
            set;
        }
    }
}

<style>
    #list {
        box-shadow: 0 1px 4px #ddd;
        border-bottom: 1px solid #ddd;
    }

    #sample {
        height: 220px;
        margin: 0 auto;
        display: block;
        max-width: 350px;
    }

    #list {
        margin: 0 auto;
        border: 1px solid #ccc;
    }

    #list .e-list-item {
        height: auto;
        cursor: pointer;
        line-height: 22px;
        padding: 8px;
    }

    #list.e-listview .e-list-header {
        background-color: #0278d7;
        color: white;
    }
    #list.e-listview .e-list-item.e-focused {
        color: black;
        background-color: transparent;
    }

    #list .e-list-item.e-active {
        background-color: transparent;
    }

    #list .e-list-item.e-hover {
        background-color: transparent;
    }

    .padding {
        padding: 4px;
    }

    .right__align {
        text-align: right;
        margin-right: 8px;
        padding-right: 8px;
    }

    .left__align {
        margin-left: 8px;
        padding-left: 8px;
    }

    .content__container {
        background-color: aliceblue;
    }

    .flex {
        display: flex;
    }

    .flex__center {
        justify-content: center;
    }

    .vertical__center {
        align-items: center;
    }

    .vertical {
        flex-direction: column;
    }

    .flex__order__1 {
        order: 1;
    }

    .flex__order__2 {
        order: 2;
    }

    .flex__1 {
        flex: 1;
    }

    .flex__2 {
        flex: 2;
    }

    .flex__3 {
        flex: 3;
    }

    .flex__5 {
        flex: 5;
    }

    .flex__8 {
        flex: 8;
    }

    .bold {
        font-weight: 500;
    }

    .margin {
        margin: 10px;
        width: 350px;
    }

    .small__font {
        font-size: 13px;
        margin: 2px 0;
    }
</style>